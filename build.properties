# JavaFX Build properties

# Top-level build directory
jfx.build.dir=${jfx.root.dir}/build

# Deliverables or artifacts root
jfx.root.output.dir=${jfx.root.dir}/artifacts
jfx.artifacts.dir=${jfx.root.output.dir}

# Deliverables or artifacts root
jfx.bundles.dir=${jfx.artifacts.dir}/bundles

# Top-level distribution directory for all samples
jfx.samples.dir=${jfx.artifacts.dir}/samples
jfx.samples.zip=${jfx.bundles.dir}/samples.zip

# Top level apps directory
jfx.apps.dir=${jfx.artifacts.dir}/apps
jfx.apps.zip=${jfx.bundles.dir}/apps.zip

# Top-level distribution directory for the deploy files
jfx.deployed.dir=${jfx.artifacts.dir}/deployed
jfx.deployed.zip=${jfx.bundles.dir}/deployed.zip

# Top-level distribution directory for combined visage runtime deployed files
jfx.rtdeployed.dir=${jfx.artifacts.dir}/rt-deployed
jfx.rtdeployed.zip=${jfx.bundles.dir}/rt-deployed.zip

# Top-level distribution directory for the SDK
jfx.sdk.dir=${jfx.artifacts.dir}/sdk
jfx.sdk.zip=${jfx.bundles.dir}/sdk.zip
jfx.docs.zip=${jfx.bundles.dir}/docs.zip

# Artifacts of import and jar_import areas
jfx.jar_import.dir=${jfx.root.dir}/jar_import
jfx.jar_import.zip=${jfx.bundles.dir}/jar_import.zip
jfx.import.zip=${jfx.bundles.dir}/import.zip

# Deployed sub directories
jfx.deployed.desktop.dir=${jfx.deployed.dir}/desktop
jfx.deployed.shared.dir=${jfx.deployed.dir}/shared

# SDK sub directories
jfx.sdk.docs.dir=${jfx.sdk.dir}/docs
jfx.sdk.bin.dir=${jfx.sdk.dir}/bin
jfx.sdk.api.docs.dir=${jfx.sdk.docs.dir}/api
jfx.sdk.samples.dir=${jfx.sdk.dir}/samples
jfx.sdk.profiles.dir=${jfx.sdk.dir}/profiles
jfx.sdk.lib.dir=${jfx.sdk.dir}/lib
jfx.sdk.desktop.dir=${jfx.sdk.lib.dir}/desktop
jfx.sdk.shared.dir=${jfx.sdk.lib.dir}/shared
jfx.sdk.runtime.dir=${jfx.sdk.dir}/runtime

# For api document input
jfx.xml.docs.dir=${jfx.artifacts.dir}/xmldocs
jfx.xml.docs.zip=${jfx.bundles.dir}/xmldocs.zip

# Transition properties?
jfx.docs.dir=${jfx.sdk.docs.dir}

# Various sdk files needed by repository builds
jfx.sdk.location.of.eula.jar=lib/desktop/eula.jar
jfx.sdk.eula.jar=${jfx.sdk.dir}/${jfx.sdk.location.of.eula.jar}
jfx.sdk.location.of.jmc.jar=lib/desktop/jmc.jar
jfx.sdk.jmc.jar=${jfx.sdk.dir}/${jfx.sdk.location.of.jmc.jar}
jfx.sdk.location.of.scenario.jar=lib/desktop/Scenario.jar
jfx.sdk.scenario.jar=${jfx.sdk.dir}/${jfx.sdk.location.of.scenario.jar}
jfx.sdk.location.of.visage.jar=lib/shared/visage.jar
jfx.sdk.visage.jar=${jfx.sdk.dir}/${jfx.sdk.location.of.visage.jar}
jfx.sdk.location.of.visagec.jar=lib/shared/visagec.jar
jfx.sdk.visagec.jar=${jfx.sdk.dir}/${jfx.sdk.location.of.visagec.jar}
jfx.sdk.location.of.visagedoc.jar=lib/shared/visagedoc.jar
jfx.sdk.visagedoc.jar=${jfx.sdk.dir}/${jfx.sdk.location.of.visagedoc.jar}
jfx.sdk.location.of.visagert.jar=lib/shared/visagert.jar
jfx.sdk.visagert.jar=${jfx.sdk.dir}/${jfx.sdk.location.of.visagert.jar}
jfx.sdk.location.of.visage=bin/visage
jfx.sdk.visage=${jfx.sdk.dir}/${jfx.sdk.location.of.visage}
jfx.sdk.location.of.visagec=bin/visagec
jfx.sdk.visagec=${jfx.sdk.dir}/${jfx.sdk.location.of.visagec}
jfx.sdk.location.of.visagedoc=bin/visagedoc
jfx.sdk.visagedoc=${jfx.sdk.dir}/${jfx.sdk.location.of.visagedoc}
jfx.sdk.location.of.visagepackager=bin/visagepackager
jfx.sdk.visagepackager=${jfx.sdk.dir}/${jfx.sdk.location.of.visagepackager}

# Deployed files
jfx.deployed.location.of.jmc.jar=desktop/jmc.jar

# Location of cached_areas
jfx.cache.dir=${jfx.root.dir}/caches
jfx.cached.sdk.dir=${jfx.cache.dir}/sdk
jfx.cached.deployed.dir=${jfx.cache.dir}/deployed
jfx.cached.xmldocs.dir=${jfx.cache.dir}/xmldocs

# Product version and name details..
jfx.product.name=visage
jfx.release.milestone=dev
jfx.release.name=1.3.1
jfx.release.major.version=1
jfx.release.minor.version=3
jfx.release.version=${jfx.release.major.version}.${jfx.release.minor.version}.1
jfx.release.ubversion=${jfx.release.major.version}_${jfx.release.minor.version}_1
jfx.install.version=${jfx.release.major.version}.${jfx.release.minor.version}.1
jfx.install.dir=${jfx.product.name}-sdk${jfx.install.version}
jfx.release.fullversion=${jfx.release.version}.0

# bundle prefix name
jfx.sdk.bundle.name=${jfx.product.name}_sdk-${jfx.release.ubversion}-${os_name}-${arch}
jfx.javadoc.bundle.name=${jfx.product.name}-${jfx.release.ubversion}-docs

# Repository tip information properties
jfx.repository.data=${jfx.build.dir}/tip.properties

# Inventory data
jfx.inventory.dir=${jfx.build.dir}/Inventory
jfx.sdk.inventory.dir=${jfx.inventory.dir}/sdk
jfx.sdk.inventory.data=${jfx.sdk.inventory.dir}/checksum.properties
jfx.deployed.inventory.dir=${jfx.inventory.dir}/deployed
jfx.deployed.inventory.data=${jfx.deployed.inventory.dir}/checksum.properties
jfx.rtdeployed.inventory.dir=${jfx.inventory.dir}/rt-deployed
jfx.rtdeployed.inventory.data=${jfx.rtdeployed.inventory.dir}/checksum.properties

# Invoice files and information
jfx.sdk.invoice=${jfx.sdk.dir}/invoice.properties
jfx.deployed.invoice=${jfx.deployed.dir}/invoice.properties
jfx.rtdeployed.invoice=${jfx.rtdeployed.dir}/invoice.properties
jfx.sdk.invoice.description=${jfx.product.name} SDK (${jfx.release.name} ${jfx.release.version} ${jfx.release.milestone})
jfx.deployed.invoice.description=${jfx.product.name} (${jfx.release.name} ${jfx.release.version} ${jfx.release.milestone})
jfx.rtdeployed.invoice.description=${jfx.deployed.invoice.description}

# Mobile specific output dir
jfx.mobile.dir=${jfx.artifacts.dir}/mobile

# TV specific output dir
jfx.tv.dir=${jfx.artifacts.dir}/tv

# Mobile Emulator source drop directory and location of properties file
jfx.mobile.emulator.dir=${jfx.root.dir}/emulator
jfx.mobile.emulator.properties.file=${jfx.root.dir}/mobile/user.properties

# TV emulator artifacts
jfx.tv.emulator.dir=${jfx.sdk.dir}/emulator/tv

# TV device artifacts
jfx.tv.devices.dir=${jfx.sdk.dir}/devices/tv

# Javac and visagec max memory setting
jfx.javac.max.memory=512m

# Javadoc and visagedoc max memory setting
jfx.javadoc.max.memory=1024m

# Antlr max memory setting
jfx.antlr.max.memory=512m

