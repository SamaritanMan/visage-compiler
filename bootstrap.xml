<?xml version="1.0" encoding="UTF-8"?>

<project name="JavaFX Compiler Bootstrap" default="all" basedir=".">

    <property name="base.dir" value="${basedir}"/>
    <property name="tools.dir" value="${basedir}/tools"/>
    <property name="lib.dir" value="${base.dir}/lib"/>
    <property name="bootstrap.dir" value="${base.dir}/bootstrap"/>

    <import file="tools-defs.xml" />

    <property name="ant.url" value="http://www.apache.org/dist/ant/binaries/apache-ant-${ant.ver}-bin.zip"/>
    <property name="ant.zipfile" value="${bootstrap.dir}/ant.zip"/>

    <property name="scenegraph.url" value="http://openjfx.java.sun.com/ea/scenegraph-0.3/scenegraph.jar"/>
    <property name="scenegraph.file" value="${scenegraph.dir}/scenegraph.jar"/>

    <property name="junit.url" value="http://downloads.sourceforge.net/junit/junit-${junit.ver}.jar"/>
    <property name="junit.jarfile" value="${bootstrap.dir}/junit.jar"/>
    <property name="junit.file" value="${junit.dir}/junit-${junit.ver}.jar"/>

    <property name="docbook.url" value="http://downloads.sourceforge.net/docbook/docbook-xsl-${docbook.ver}.tar.gz"/>
    <property name="docbook.tgzfile" value="${bootstrap.dir}/docbook-xsl-${docbook.ver}.tar.gz"/>
    <property name="docbook.tarfile" value="${bootstrap.dir}/docbook-xsl-${docbook.ver}.tar"/>

    <property name="wysiwygdocbook.url" value="http://www.informatik.fh-wiesbaden.de/~werntges/proj/dbkcss102/wysiwygdocbook1.02.zip"/>
    <property name="wysiwygdocbook.zipfile" value="${bootstrap.dir}/wysiwygdocbook${wysiwygdocbook.ver}.zip"/>

    <property name="findbugs.url"
              value="http://prdownloads.sourceforge.net/findbugs/findbugs-${findbugs.ver}.zip?download"/>
    <property name="findbugs.zipfile" value="${bootstrap.dir}/findbugs.zip"/>

    <property name="saxon.url" value="http://downloads.sourceforge.net/saxon/saxon6-5-5.zip"/>
    <property name="saxon.zipfile" value="${bootstrap.dir}/saxon-${saxon.ver}.zip"/>

    <property name="xincluder.url" value="ftp://ftp.ibiblio.org/pub/languages/java/javafaq/xincluder-1.0d11.tar.gz"/>
    <property name="xincluder.tgzfile" value="${bootstrap.dir}/xincluder-${xincluder.ver}.tgz"/>
    <property name="xincluder.tarfile" value="${bootstrap.dir}/xincluder-${xincluder.ver}.tar"/>

    <property name="antlr.url" value="http://antlr.org/download/antlr-${antlr.ver}.tar.gz"/>
    <property name="antlr.tgzfile" value="${bootstrap.dir}/antlr-${antlr.ver}.tar.gz"/>
    <property name="antlr.tarfile" value="${bootstrap.dir}/antlr-${antlr.ver}.tar"/>

    <property name="antlrworks.url" value="http://antlr.org/download/antlrworks-${antlrworks.ver}.jar"/>
    <property name="antlrworks.file" value="${antlrworks.dir}/antlrworks-${antlrworks.ver}.jar"/>

    <property name="cobertura.url" value="http://downloads.sourceforge.net/cobertura/cobertura-${cobertura.ver}-bin.zip"/>
    <property name="cobertura.zipfile" value="${bootstrap.dir}/cobertura-${cobertura.ver}.zip"/>

    <property name="svnstat.url" value="http://downloads.sourceforge.net/svnstat/SvnStat-${svnstat.ver}.zip"/>
    <property name="svnstat.zipfile" value="${bootstrap.dir}/svnstat-${svnstat.ver}.zip"/>


    <target name="prepare">
        <mkdir dir="${bootstrap.dir}"/>
        <mkdir dir="${tools.dir}"/>
        <mkdir dir="${ant.dir}"/>
        <mkdir dir="${scenegraph.dir}"/>
        <mkdir dir="${findbugs.dir}"/>
        <mkdir dir="${junit.dir}"/>
        <mkdir dir="${docbook.dir}"/>
        <mkdir dir="${wysiwygdocbook.dir}"/>
        <mkdir dir="${saxon.dir}"/>
        <mkdir dir="${xincluder.dir}"/>
        <mkdir dir="${antlr.dir}"/>
        <mkdir dir="${antlrworks.dir}"/>
        <mkdir dir="${cobertura.dir}"/>
        <mkdir dir="${svnstat.dir}"/>
    </target>

    <target name="clean">
        <delete dir="${bootstrap.dir}"/>
        <delete dir="${ant.dir}"/>
        <delete dir="${scenegraph.dir}"/>
        <delete dir="${findbugs.dir}"/>
        <delete dir="${junit.dir}"/>
        <delete dir="${docbook.dir}"/>
        <delete dir="${wysiwygdocbook.dir}"/>
        <delete dir="${saxon.dir}"/>
        <delete dir="${xincluder.dir}"/>
        <delete dir="${antlr.dir}"/>
        <delete dir="${antlrworks.dir}"/>
        <delete dir="${cobertura.dir}"/>
        <delete dir="${svnstat.dir}"/>
    </target>

    <target name="all" depends="prepare,junit,ant,scenegraph,docbook,wysiwygdocbook,findbugs,saxon,xincluder,antlr,antlrworks,cobertura,svnstat"/>
 
    <target name="ant" depends="prepare">
        <get src="${ant.url}" dest="${ant.zipfile}"/>
        <unzip src="${ant.zipfile}" dest="${ant.dir}">
            <patternset includes="**/ant.jar"/>
            <mapper type="flatten"/>
        </unzip>
        <delete file="${ant.zipfile}" />
    </target>

    <target name="junit" depends="prepare">
        <mkdir dir="${junit.dir}"/>
        <get src="${junit.url}" dest="${junit.file}"/>
    </target>

    <target name="scenegraph" depends="prepare">
        <mkdir dir="${scenegraph.dir}"/>
        <get src="${scenegraph.url}" dest="${scenegraph.file}"/>
    </target>

    <target name="docbook" depends="prepare">
        <get src="${docbook.url}" dest="${docbook.tgzfile}"/>
        <gunzip src="${docbook.tgzfile}" dest="${bootstrap.dir}"/>
        <untar src="${docbook.tarfile}" dest="${docbook.dir}">
            <mapper type="glob" from="docbook-xsl-${docbook.ver}/*" to="*"/>
        </untar>
        <delete file="${docbook.tarfile}" />
        <delete file="${docbook.tgzfile}" />
    </target>

    <target name="wysiwygdocbook" depends="prepare">
        <get src="${wysiwygdocbook.url}" dest="${wysiwygdocbook.zipfile}"/>
        <unzip src="${wysiwygdocbook.zipfile}" dest="${wysiwygdocbook.dir}">
            <mapper type="glob" from="wysiwygdocbook${wysiwygdocbook.ver}/*" to="*"/>
        </unzip>
        <echo file="doc/langspec/docbook.css">@import "../../tools/${wysiwygdocbook.reldir}/driver.css";
</echo>
        <delete file="${wysiwygdocbook.zipfile}" />
    </target>

    <target name="findbugs" depends="prepare">
        <get src="${findbugs.url}" dest="${findbugs.zipfile}"/>
        <unzip src="${findbugs.zipfile}" dest="${findbugs.dir}">
            <patternset includes="findbugs-${findbugs.ver}/**"/>
            <mapper type="glob" from="findbugs-${findbugs.ver}/*" to="*"/>
        </unzip>
        <delete file="${findbugs.zipfile}" />
    </target>

    <target name="saxon" depends="prepare">
        <get src="${saxon.url}" dest="${saxon.zipfile}"/>
        <unzip src="${saxon.zipfile}" dest="${saxon.dir}">
            <patternset includes="**/saxon.jar"/>
            <mapper type="flatten"/>
        </unzip>
        <delete file="${saxon.zipfile}" />
    </target>

    <target name="xincluder" depends="prepare">
        <get src="${xincluder.url}" dest="${xincluder.tgzfile}"/>
        <gunzip src="${xincluder.tgzfile}" dest="${xincluder.tarfile}"/>
        <untar src="${xincluder.tarfile}" dest="${xincluder.dir}">
            <patternset includes="**/xincluder.jar"/>
            <mapper type="flatten"/>
        </untar>
        <delete file="${xincluder.tarfile}" />
        <delete file="${xincluder.tgzfile}" />
    </target>

    <target name="antlr" depends="prepare">
        <mkdir dir="${antlr.dir}"/>
        <get src="${antlr.url}" dest="${antlr.tgzfile}"/>
        <gunzip src="${antlr.tgzfile}" dest="${antlr.tarfile}"/>
        <untar src="${antlr.tarfile}" dest="${antlr.dir}">
            <patternset>
                 <include name="antlr-${antlr.ver}/lib/*.jar" />
             </patternset>
            <mapper type="flatten"/>
        </untar>
        <delete file="${antlr.tarfile}" />
        <delete file="${antlr.tgzfile}" />
    </target>

    <target name="antlrworks" depends="prepare">
        <mkdir dir="${antlrworks.dir}"/>
        <get src="${antlrworks.url}" dest="${antlrworks.file}"/>
    </target>

    <target name="cobertura" depends="prepare">
        <get src="${cobertura.url}" dest="${cobertura.zipfile}"/>
        <unzip src="${cobertura.zipfile}" dest="${cobertura.dir}">
            <patternset includes="**/*.jar"/>
            <mapper type="flatten"/>
        </unzip>
        <delete file="${cobertura.zipfile}" />
    </target>

    <target name="svnstat" depends="prepare">
        <get src="${svnstat.url}" dest="${svnstat.zipfile}"/>
        <unzip src="${svnstat.zipfile}" dest="${svnstat.dir}">
            <patternset includes="**/*.jar"/>
            <mapper type="flatten"/>
        </unzip>
        <delete file="${svnstat.zipfile}" />
    </target>



</project>
