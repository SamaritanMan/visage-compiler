<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See commented blocks below for -->
<!-- some examples of how to customize the build. -->
<!-- (If you delete it and reopen the project it will be recreated.) -->
<project name="JavaFX_Runtime" default="default" basedir=".">
    <description>Builds, tests, and runs the project JavaFX Runtime.</description>
    <property name="tools.dir" value="${basedir}/../tools"/>
    <!-- Scenario is in openjfx-compiler repository until its development slows -->
    <property name="scenegraph.dir" value="${basedir}/../lib"/>
    <property environment="env" />
    <import file="../tools-defs.xml"/>
    <import file="nbproject/build-impl.xml"/>

    <available property="ant.jar" value="${ant.home}/lib/ant.jar" file="${ant.home}/lib/ant.jar"/>
    <!-- if the previous location is not correct than find the ant.jar from the java.class.path value -->
    <pathconvert property="ant.jar">
        <mapper type="regexp" from="${path.separator}([^${path.separator}]*ant.jar)${path.separator}" to="\1"/>
        <path location="${path.separator}${java.class.path}${path.separator}"/>
    </pathconvert>

    <target name="-pre-init">
        <property name="scenegraph.class.path" refid="scenegraph.class.path"/>
    </target>

    <target name="init" depends="-pre-init,-init-private,-init-user,-init-project,-do-init,-post-init,-init-check,-init-macrodef-property,-init-macrodef-javac,-init-macrodef-junit,-init-macrodef-nbjpda,-init-macrodef-debug,-init-macrodef-java,-init-presetdef-jar">
        <fail message="Ant version 1.7.0 or later is required to build JavaFX.">
            <condition>
                <not>
                    <antversion atleast="1.7.0"/>
                </not>
            </condition>
        </fail>
    </target>

    <target name="-do-compile" depends="init,deps-jar,-pre-pre-compile,-pre-compile" if="have.sources">
        <javac compiler="modern" fork="true"
               srcdir="${src.classes.dir}" destdir="${build.classes.dir}"
               debug="${javac.debug}" deprecation="${javac.deprecation}"
               includes="${includes}" excludes="${excludes}"
               source="${javac.source}" target="${javac.target}" includeantruntime="false">
            <classpath>
                <path path="${javac.classpath}"/>
            </classpath>
            <compilerarg value="-J-Xbootclasspath/p:${basedir}${file.separator}..${file.separator}lib${file.separator}javac.jar"/>
            <compilerarg line="${javac.compilerargs}"/>
        </javac>
        <copy todir="${build.classes.dir}">
            <fileset dir="${src.classes.dir}" excludes="${build.classes.excludes}"/>
        </copy>
    </target>

    <target name="-post-compile" if="have.sources" depends="init,deps-jar,-pre-pre-compile,-pre-compile">
        <taskdef name="javafxc" classname="com.sun.tools.javafx.ant.JavaFxAntTask">
            <classpath>
                <pathelement location="${ant.jar}"/>
                <pathelement location="../${build.classes.dir}"/>
                <pathelement path="${javac.classpath}"/>
            </classpath>
        </taskdef>
        <javafxc debug="${javac.debug}" deprecation="${javac.deprecation}"
                 destdir="${build.classes.dir}" fork="true" memoryMaximumSize="256m"
                 encoding="${source.encoding}" excludes="${excludes}" includeantruntime="false"
                 includes="**/*.fx" source="${javac.source}" sourcepath=""
                 srcdir="${src.classes.dir}" target="${javac.target}"
                 classpath="${build.classes.dir}:${javac.test.classpath}"
                 compilerclasspath="${build.classes.dir}:${javac.classpath}">
            <compilerarg line="${javafxc.compilerargs}"/>
        </javafxc>
    </target>
    
    <!-- properties that control what gets included in the jar, set from outside -->
    <property name="javafxc.excludes" value=""/>
    <property name="jar.excludes" value=""/>
    <property name="swing-layout.excludes" value=""/>
    
    <target name="jar" description="Build JARs" depends="init,compile,-pre-pre-jar">
        <jar compress="${jar.compress}" destfile="${dist.jar}">
            <fileset dir="${build.classes.dir}" includes="${javafxrt.includes}"/>
            <zipfileset src="${file.reference.javafxc.jar}" includes="com/sun/javafx/**,javafx/**" 
                        excludes="com/sun/javafx/api/**,${javafxc.excludes}"/>
        </jar>
        <jar compress="${jar.compress}" destfile="${dist.gui.jar}">
            <fileset dir="${build.classes.dir}" includes="${javafxgui.includes}"/>
            <zipfileset src="${file.reference.swing-layout.jar}" excludes="META-INF/**/,${swing-layout.excludes}"/>
        </jar>
        <jar compress="${jar.compress}" destfile="${dist.ext.jar}">
            <fileset dir="${build.classes.dir}" includes="javafx/ext/**"/>
        </jar>
        <copy file="${file.reference.scenegraph.jar}" todir="${dist.jar.dir}"/>
        <copy file="${file.reference.jmc.jar}" todir="${dist.jar.dir}"/>
    </target>

    <target name="-do-clean" depends="init">
        <delete dir="${build.dir}"/>
        <delete dir="${dist.jar}"/>
        <delete dir="${build.test.dir}"/>
    </target>
</project>
