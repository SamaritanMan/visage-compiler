test\should-fail\jfxc1250varInverseBind.fx:48: cannot find symbol
symbol  : variable memScr
location: class jfxc1250varInverseBind.Inh
	{ var x = bind memScr with inverse };   // ERROR: inherited, same package
	               ^
test\should-fail\jfxc1250varInverseBind.fx:52: memIScr has script only (default) bind access in jfxc1250subFail
	{ var x = bind memIScr with inverse };   // ERROR: inherited, same package
	               ^
test\should-fail\jfxc1250varInverseBind.fx:56: memRScr has script only (default) bind access in jfxc1250subFail
	{ var x = bind memRScr with inverse };   // ERROR: inherited, same package
	               ^
test\should-fail\jfxc1250varInverseBind.fx:64: cannot find symbol
symbol  : variable memPkg
location: class jfxc1250varInverseBind.InhA
	{ var x = bind memPkg with inverse };   // ERROR: inherited, different package
	               ^
test\should-fail\jfxc1250varInverseBind.fx:65: cannot find symbol
symbol  : variable memScr
location: class jfxc1250varInverseBind.InhA
	{ var x = bind memScr with inverse };   // ERROR: inherited, different package
	               ^
test\should-fail\jfxc1250varInverseBind.fx:68: memIPkg has package bind access in jfxc1250.a.jfxc1250subFailA
	{ var x = bind memIPkg with inverse };   // ERROR: inherited, different package
	               ^
test\should-fail\jfxc1250varInverseBind.fx:69: memIScr has script only (default) bind access in jfxc1250.a.jfxc1250subFailA
	{ var x = bind memIScr with inverse };   // ERROR: inherited, different package
	               ^
test\should-fail\jfxc1250varInverseBind.fx:72: memRPkg has package bind access in jfxc1250.a.jfxc1250subFailA
	{ var x = bind memRPkg with inverse };   // ERROR: inherited, different package
	               ^
test\should-fail\jfxc1250varInverseBind.fx:73: memRScr has script only (default) bind access in jfxc1250.a.jfxc1250subFailA
	{ var x = bind memRScr with inverse };   // ERROR: inherited, different package
	               ^
test\should-fail\jfxc1250varInverseBind.fx:124: memScr has script only (default) access in jfxc1250subFail
	{ var x = bind vf.memScr with inverse };   // ERROR: same package
	                 ^
test\should-fail\jfxc1250varInverseBind.fx:128: memIScr has script only (default) bind access in jfxc1250subFail
	{ var x = bind vf.memIScr with inverse };   // ERROR: same package
	                 ^
test\should-fail\jfxc1250varInverseBind.fx:132: memRScr has script only (default) bind access in jfxc1250subFail
	{ var x = bind vf.memRScr with inverse };   // ERROR: same package
	                 ^
test\should-fail\jfxc1250varInverseBind.fx:138: memPro has protected access in jfxc1250.a.jfxc1250subFailA
	{ var x = bind vf.memPro with inverse };   // ERROR: different package
	                 ^
test\should-fail\jfxc1250varInverseBind.fx:139: memPkg is not public in jfxc1250.a.jfxc1250subFailA; cannot be accessed from outside package
	{ var x = bind vf.memPkg with inverse };   // ERROR: different package
	                 ^
test\should-fail\jfxc1250varInverseBind.fx:140: memScr has script only (default) access in jfxc1250.a.jfxc1250subFailA
	{ var x = bind vf.memScr with inverse };   // ERROR: different package
	                 ^
test\should-fail\jfxc1250varInverseBind.fx:142: memIPro has protected bind access in jfxc1250.a.jfxc1250subFailA
	{ var x = bind vf.memIPro with inverse };   // ERROR: different package
	                 ^
test\should-fail\jfxc1250varInverseBind.fx:143: memIPkg has package bind access in jfxc1250.a.jfxc1250subFailA
	{ var x = bind vf.memIPkg with inverse };   // ERROR: different package
	                 ^
test\should-fail\jfxc1250varInverseBind.fx:144: memIScr has script only (default) bind access in jfxc1250.a.jfxc1250subFailA
	{ var x = bind vf.memIScr with inverse };   // ERROR: different package
	                 ^
test\should-fail\jfxc1250varInverseBind.fx:146: memRPro has protected bind access in jfxc1250.a.jfxc1250subFailA
	{ var x = bind vf.memRPro with inverse };   // ERROR: different package
	                 ^
test\should-fail\jfxc1250varInverseBind.fx:147: memRPkg has package bind access in jfxc1250.a.jfxc1250subFailA
	{ var x = bind vf.memRPkg with inverse };   // ERROR: different package
	                 ^
test\should-fail\jfxc1250varInverseBind.fx:148: memRScr has script only (default) bind access in jfxc1250.a.jfxc1250subFailA
	{ var x = bind vf.memRScr with inverse };   // ERROR: different package
	                 ^
21 errors
