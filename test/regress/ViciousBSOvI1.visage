/**
 * The vicious bound sequence test over Integer
 *
 * @compilefirst ViciousCheckOvI.visage
 * @compilefirst ViciousEngineOvI.visage
 * @test
 * @run
 */

var unchanging = true;

class A extends ViciousCheckOvI {
  override function expect() { if (n == 5) [ 4, 4, n*3] else [ n + 10 ] }
  override var content =  bind if (n == 5) [ 4, 4, n*3] else [ n + 10 ];
}

class B extends ViciousCheckOvI {
  override function expect() { if (n == 5) [0..n] else [3] }
  override var content =  bind if (n == 5) [0..n] else [3];
}

class C extends ViciousCheckOvI {
  override function expect() { if (n == 5) [3] else [0..n] }
  override var content =  bind if (n == 5) [3] else [0..n];
}

class D extends ViciousCheckOvI {
  override function expect() { if (n > 3) [-n .. 2] else [n .. 0 step -2] }
  override var content =  bind if (n > 3) [-n .. 2] else [n .. 0 step -2];
}

class E extends ViciousCheckOvI {
  override function expect() { if (n > 2 and n < 7) [ 4, 4, n*3] else [ 0..(n+10) ] }
  override var content =  bind if (n > 2 and n < 7) [ 4, 4, n*3] else [ 0..(n+10) ];
}

class F extends ViciousCheckOvI {
  override function expect() { if (n > 4) [ 1, 2, 3, 4 ] else [ 6 ] }
  override var content =  bind if (n > 4) [ 1, 2, 3, 4 ] else [ 6 ];
}

class G extends ViciousCheckOvI {
  override function expect() { if (unchanging) [ 4, 4, n*3] else [ n + 10 ] }
  override var content =  bind if (unchanging) [ 4, 4, n*3] else [ n + 10 ];
}

class H extends ViciousCheckOvI {
  override function expect() { if (unchanging) [0..n] else [3] }
  override var content =  bind if (unchanging) [0..n] else [3];
}

class I extends ViciousCheckOvI {
  override function expect() { if (unchanging) [3] else [0..n] }
  override var content =  bind if (unchanging) [3] else [0..n];
}

class J extends ViciousCheckOvI {
  override function expect() { if (unchanging) [-5 .. n] else [n .. 0 step -2] }
  override var content =  bind if (unchanging) [-5 .. n] else [n .. 0 step -2];
}

class K extends ViciousCheckOvI {
  override function expect() { if (n > 2 and n < 7) [ n, n, n, n ] else [ 0..(n+10) ] }
  override var content =  bind if (n > 2 and n < 7) [ n, n, n, n ] else [ 0..(n+10) ];
}

class L extends ViciousCheckOvI {
  override function expect() { if (n != 5 and n > 2 and n < 8) [ n, n+n, 14, 2, n ] else  [ n*10, n, n*n ] }
  override var content =  bind if (n != 5 and n > 2 and n < 8) [ n, n+n, 14, 2, n ] else  [ n*10, n, n*n ];
}

class M extends ViciousCheckOvI {
  override function expect() { if (n != 5 and n < 8) [ n, [0..n], 14, [-n..0], n ] else  [ n*10, n, n*n, n*n ] }
  override var content =  bind if (n != 5 and n < 8) [ n, [0..n], 14, [-n..0], n ] else  [ n*10, n, n*n, n*n ];
}

class N extends ViciousCheckOvI {
  override function expect() { if (n > 2 and n < 7) [n*3] else [n] }
  override var content =  bind if (n > 2 and n < 7) [n*3] else [n];
}

class ViciousBSOvI1 extends ViciousEngineOvI {

  //override var verbose = 2;

  override function tests() {
    [ A{}, B{}, C{}, D{}, E{}, F{}, G{}, H{}, I{}, J{}, K{}, L{}, M{}, N{} ]
  }
}

ViciousBSOvI1{}.test()
