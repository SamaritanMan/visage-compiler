<?xml version="1.0" encoding="UTF-8"?>

<project name="JavaFX Compiler" default="jar" basedir=".">

    <property name="base.dir" value="${basedir}"/>
    <property name="tools.dir" value="${basedir}/tools"/>
    <property name="lib.dir" value="${base.dir}/lib"/>
    <property name="test.dir" value="${base.dir}/test"/>
    <property name="test.src.dir" value="${base.dir}/test/src"/>
    <property name="dist.dir" value="${base.dir}/dist"/>
    <property name="build.dir" value="${base.dir}/build"/>
    <property name="build.classes.dir" value="${build.dir}/classes"/>
    <property name="test.classes.dir" value="${build.dir}/test-classes"/>
    <property name="build.instrumented.dir" value="${build.dir}/classes-instrumented"/>
    <property name="build.test.dir" value="${build.dir}/test"/>
    <property name="build.milestones.dir" value="${build.dir}/features"/>
    <property name="test.results.dir" value="${build.dir}/test-results"/>
    <property name="publish.dir" value="${dist.dir}/publish"/>
    <property name="publish.coverage.dir" value="${publish.dir}/coverage"/>
    <property name="publish.findbugs.dir" value="${publish.dir}/findbugs"/>
    <property name="src.fx.dir" value="${base.dir}/src/share/classes"/>
    <property name="src.java.dir" value="${base.dir}/src/share/classes"/>
    <property name="jar.file" value="${dist.dir}/javafx.jar"/>
    <property name="cobertura.file" value="cobertura.ser"/>

    <import file="tools-defs.xml"/>

    <path id="javac.class.path">
        <fileset dir="${lib.dir}" includes="javac.jar"/>
    </path>

    <path id="build.class.path">
        <pathelement location="${java.class.path}"/>
        <pathelement location="${build.classes.dir}"/>
        <path refid="javac.class.path"/>
        <path refid="junit.class.path"/>
        <path refid="antlr-runtime.class.path"/>
    </path>

    <path id="run.class.path">
        <pathelement location="${build.instrumented.dir}"/>
        <pathelement location="${build.classes.dir}"/>
        <path refid="javac.class.path"/>
        <path refid="antlr-runtime.class.path"/>
    </path>

    <path id="test.class.path">
        <pathelement location="${java.class.path}"/>
        <pathelement location="${test.classes.dir}"/>
        <pathelement location="${build.instrumented.dir}"/>
        <pathelement location="${build.classes.dir}"/>
        <path refid="javac.class.path"/>
        <path refid="junit.class.path"/>
        <path refid="antlr-runtime.class.path"/>
        <path refid="cobertura.class.path"/>
    </path>

    <taskdef classpathref="cobertura.class.path" resource="tasks.properties"/>

    <target name="prepare">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.classes.dir}"/>
        <mkdir dir="${build.test.dir}"/>
        <mkdir dir="${test.classes.dir}"/>
        <mkdir dir="${test.results.dir}"/>
        <mkdir dir="${build.instrumented.dir}"/>
        <mkdir dir="${dist.dir}"/>
    </target>

    <target name="clean">
        <delete dir="${build.dir}"/>
        <delete dir="${dist.dir}"/>
        <delete dir="${publish.dir}"/>
        <delete file="${cobertura.file}"/>
    </target>

    <target name="compile-java" depends="prepare">
        <javac srcdir="${src.java.dir}" classpathref="build.class.path" includes="**/*.java"
               destdir="${build.classes.dir}" debug="true">
            <compilerarg value="-XDignore.symbol.file" />
        </javac>
        <copy todir="${build.classes.dir}">
            <fileset dir="${src.fx.dir}" includes="**/*.properties"/>
            <fileset dir="${src.java.dir}" includes="META-INF/**"/>
        </copy>
    </target>

    <target name="compile-tests" depends="prepare">
        <javac srcdir="${test.src.dir}" classpathref="build.class.path" includes="**/*.java"
               destdir="${test.classes.dir}" debug="true">
        <compilerarg value="-XDignore.symbol.file" />
        </javac>
    </target>

    <target name="coverage">
        <property name="do.coverage" value="true"/>
    </target>

    <target name="conditional-instrument" if="do.coverage">
        <cobertura-instrument todir="${build.instrumented.dir}">
            <fileset dir="${build.classes.dir}" includes="**/*.class"/>
            <classpath refid="build.class.path"/>
        </cobertura-instrument>
    </target>

    <target name="conditional-clean-instrument" unless="do.coverage">
        <delete dir="${build.instrumented.dir}" />
    </target>

    <target name="before-junit" depends="compile-java,conditional-instrument,conditional-clean-instrument" >
    </target>

    <target name="after-junit" if="do.coverage">
        <mkdir dir="${publish.coverage.dir}" />
        <cobertura-report srcdir="${src.java.dir}" destdir="${publish.coverage.dir}">
            <classpath refid="build.class.path"/>
        </cobertura-report>
    </target>

    <target name="do-junit">
        <junit dir="${basedir}" fork="true" showoutput="true">
            <batchtest todir="${test.results.dir}">
                <fileset dir="${test.src.dir}">
                    <filename name="**/*Test.java"/>
                </fileset>
            </batchtest>
            <classpath refid="test.class.path"/>
            <formatter type="brief" usefile="false"/>
            <formatter type="xml"/>
        </junit>
    </target>

    <target name="junit" depends="compile-java,compile-tests,before-junit,do-junit,after-junit"/>

    <target name="copy-resources" depends="prepare">
        <copy todir="${build.classes.dir}">
            <fileset dir="${src.fx.dir}" includes="**/*.fx"/>
            <fileset dir="${src.java.dir}" excludes="**/*.java"/>
        </copy>
    </target>

    <target name="build" depends="compile-java,copy-resources"/>

    <target name="jar" depends="build">
        <jar jarfile="${jar.file}" basedir="${build.classes.dir}"/>
    </target>

    <taskdef resource="javafxc-ant-task.properties">
        <classpath>
            <path refid="ant.class.path"/>
            <pathelement location="${build.classes.dir}"/>
            <path refid="javac.class.path"/>
            <path refid="antlr-runtime.class.path"/>
        </classpath>
    </taskdef>

    <!-- abstract target, param=${milestone} -->
    <target name="milestone" depends="build">

        <property name="intermediate.dir" value="${build.milestones.dir}/${milestone}"/>
        <property name="javac.class.path" refid="javac.class.path"/>
        <property name="antlr-runtime.class.path" refid="antlr-runtime.class.path"/>
        <mkdir dir="${intermediate.dir}"/>
        <javafxc srcdir="${test.dir}/features/${milestone}" classpathref="run.class.path" includes="**/*.fx"
                 destdir="${intermediate.dir}" compilerclasspath="${build.classes.dir}:${javac.class.path}:${antlr-runtime.class.path}"/>
        <javac srcdir="${intermediate.dir}" destdir="${intermediate.dir}" classpathref="run.class.path"
               includes="**/*.java" debug="true"/>
        <java fork="true" classname="Main">
            <classpath>
                <pathelement location="${intermediate.dir}"/>
                <path refid="run.class.path"/>
            </classpath>
        </java>
    </target>

</project>
