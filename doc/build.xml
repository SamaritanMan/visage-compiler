<?xml version="1.0" encoding="UTF-8"?>

<project default="spec" name="javafx-docs" basedir="..">
    <property name="build.dir" value="${basedir}/build"/>
    <property name="tools.dir" value="${basedir}/tools" />

    <import file="../tools-defs.xml" />

    <property name="doc.build.dir" value="${build.dir}/doc"/>
    <property name="doc.src.dir" value="${basedir}/doc/langspec"/>
    <property name="html.style" value="${docbook.dir}/html/chunkfast.xsl"/>
    <property name="xhtml.style" value="${docbook.dir}/xhtml/chunkfast.xsl"/>
    <property name="doc.name" value="JavaFX-Language"/>

    <!-- Choose between HTML and XHTML -->
    <property name="chunk.style" value="${html.style}"/>

    <path id="doc.build.class.path">
        <path refid="saxon.class.path" />
        <path refid="xincluder.class.path" />
    </path>

    <target name="langspec"
     description="Build language specification using make and xsltproc.">
        <exec dir="doc/langspec" command="make langspec"/>
    </target>

    <target name="prepare">
        <mkdir dir="${doc.build.dir}"/>
        <mkdir dir="${doc.build.dir}/html"/>
        <mkdir dir="${doc.build.dir}/tmp"/>
    </target>

    <target name="spec"
     description="Build language specification using Ant">
        <antcall target="chunk-html"/>
        <antcall target="copy-figures"/>
    </target>

    <target name="clean" description="Deletes all generated documentation.">
        <delete file="doc/langspec/langref.xsl"/>
        <delete file="langspec/langref.xsl"/>
        <delete dir="${doc.build.dir}"/>
    </target>

    <!-- Abstract targets -->

   <target name="langref.xsl">
     <makeurl property="chunk.url" file="${chunk.style}"/>
     <filter token="chunk-xsl" value="${chunk.url}"/>
     <copy file="doc/langspec/langref-in.xsl" tofile="doc/langspec/langref.xsl" filtering="true"/>
     </target>

    <!-- arg: doc.name -->
    <target name="chunk-html" depends="prepare,langref.xsl">
        <makeurl property="doc.xml" file="${doc.src.dir}/${doc.name}.xml"/>
        <java classname="com.elharo.xml.xinclude.SAXXIncluder" fork="true" 
              dir="${doc.build.dir}/html" failonerror="true">
            <classpath refid="doc.build.class.path" />
            <arg value="${doc.xml}"/>
            <redirector output="${doc.build.dir}/tmp/${doc.name}-xi-tmp.xml" />
        </java>

        <java classname="com.icl.saxon.StyleSheet" fork="true"
              dir="${doc.build.dir}/html" failonerror="true">
            <classpath refid="doc.build.class.path"/>
            <arg file="${doc.build.dir}/tmp/${doc.name}-xi-tmp.xml"/>
            <arg value="${doc.src.dir}/langref.xsl"/>
            <arg value="use.id.as.filename=1"/>
            <arg value="root.filename=${doc.name}"/>
            <arg value="chunk.section.depth=1"/>
            <arg value="chunk.first.sections=1"/>
            <arg value="draft.mode=yes"/>
<!--         <arg value="navig.graphics=1"/>-->
        </java>
	<copy file="doc/langspec/langref.css" tofile="${doc.build.dir}/html/langref.css"/>
    </target>

    <target name="copy-figures">
        <copy todir="${doc.build.dir}/html" failonerror="true">
            <fileset dir="${doc.src.dir}" includes="*.png"/>
        </copy>
    </target>

</project>
