<?xml version="1.0" encoding="UTF-8"?>

<project default="spec" name="javafx-docs" basedir="..">
    <property name="build.dir" value="${basedir}/build"/>
    <property name="tools.dir" value="${basedir}/tools"/>

    <import file="../tools-defs.xml" />

    <property name="doc.build.dir" value="${build.dir}/doc"/>
    <property name="doc.src.dir" value="${basedir}/doc/langspec"/>
    <property name="html.style" value="${docbook.dir}/html/chunkfast.xsl"/>
    <property name="xhtml.style" value="${docbook.dir}/xhtml/chunkfast.xsl"/>
    <property name="manpages.path" value="${docbook.dir}/manpages/docbook.xsl"/>
    <property name="manpages.xsl.path" value="${doc.build.dir}/tmp/manpages.xsl"/>
    <property name="htmlpages.xsl.path" value="${doc.build.dir}/tmp/htmlpages.xsl"/>
    <property name="doc.name" value="JavaFX-Language"/>

    <!-- Choose between HTML and XHTML -->
    <property name="chunk.style" value="${html.style}"/>

    <path id="doc.build.class.path">
        <path refid="saxon.class.path" />
        <path refid="xincluder.class.path" />
        <path refid="resolver.class.path"/>
        <path location="${doc.build.dir}/tmp"/>
    </path>

    <target name="langspec"
     description="Build language specification using make and xsltproc.">
        <exec dir="doc/langspec" command="make langspec"/>
    </target>

    <target name="prepare" depends="-init-macrodef-manpage">
        <mkdir dir="${doc.build.dir}"/>
        <mkdir dir="${doc.build.dir}/html"/>
        <mkdir dir="${doc.build.dir}/tmp"/>
        <mkdir dir="${doc.build.dir}/man/man1"/>

        <propertyfile file="${doc.build.dir}/tmp/CatalogManager.properties">
            <entry key="catalogs" value="${docbook-xml.dir}/catalog.xml"/>
            <entry key="relative-catalogs" value="false"/>
            <entry key="static-catalog" value="yes"/>
            <entry key="catalog-class-name" value="org.apache.xml.resolver.Resolver"/>
            <entry key="verbosity" value="1"/>
        </propertyfile>
    </target>

    <target name="spec"
     description="Build language specification using Ant">
        <antcall target="chunk-html"/>
        <antcall target="copy-figures"/>
    </target>

    <target name="clean" description="Deletes all generated documentation.">
        <delete file="doc/langspec/langref.xsl"/>
        <delete file="langspec/langref.xsl"/>
        <delete dir="${doc.build.dir}"/>
    </target>

    <!-- Abstract targets -->

   <target name="langref.xsl">
     <makeurl property="chunk.url" file="${chunk.style}"/>
     <filter token="chunk-xsl" value="${chunk.url}"/>
     <copy file="doc/langspec/langref-in.xsl" tofile="doc/langspec/langref.xsl" filtering="true"/>
     </target>
     
   <target name="manpages.xsl">
     <makeurl property="manpages.url" file="${manpages.path}"/>
     <filter token="manpages-url" value="${manpages.url}"/>
     <copy file="doc/man/manpages-in.xsl" tofile="${manpages.xsl.path}" filtering="true"/>
   </target>
     
    <target name="htmlpages.xsl">
        <makeurl property="chunk.url" file="${chunk.style}"/>
        <filter token="chunk-xsl" value="${chunk.url}"/>
        <copy file="doc/man/htmlpages-in.xsl" tofile="${htmlpages.xsl.path}" filtering="true"/>
   </target>

    <!-- arg: doc.name -->
    <target name="chunk-html" depends="prepare,langref.xsl">
        <makeurl property="doc.xml" file="${doc.src.dir}/${doc.name}.xml"/>
        <java classname="com.elharo.xml.xinclude.SAXXIncluder" fork="true" 
              dir="${doc.build.dir}/html" failonerror="true">
            <classpath refid="doc.build.class.path" />
            <arg line="-r org.apache.xml.resolver.tools.CatalogResolver"/>
            <arg value="${doc.xml}"/>
            <redirector output="${doc.build.dir}/tmp/${doc.name}-xi-tmp.xml"/>
        </java>

        <java classname="com.icl.saxon.StyleSheet" fork="true"
              dir="${doc.build.dir}/html" failonerror="true">
            <classpath refid="doc.build.class.path"/>
            <arg line="-x org.apache.xml.resolver.tools.ResolvingXMLReader"/>
            <arg line="-y org.apache.xml.resolver.tools.ResolvingXMLReader"/>
            <arg line="-r org.apache.xml.resolver.tools.CatalogResolver"/>
            <arg file="${doc.build.dir}/tmp/${doc.name}-xi-tmp.xml"/>
            <arg file="${doc.src.dir}/langref.xsl"/>
            <arg value="use.id.as.filename=1"/>
            <arg value="root.filename=${doc.name}"/>
            <arg value="chunk.section.depth=1"/>
            <arg value="chunk.first.sections=1"/>
            <arg value="draft.mode=yes"/>
<!--         <arg value="navig.graphics=1"/>-->
        </java>

        <delete file="${doc.build.dir}/tmp/${doc.name}-xi-tmp.html" failonerror="no"/>
        <copy file="doc/langspec/langref.css" tofile="${doc.build.dir}/html/langref.css"/>
    </target>
    
    <target name="man-pages" depends="javafx-man-page,javafxc-man-page,javafxdoc-man-page"
            description="generate Unix-style manual pages">
	<copy file="doc/man/manpage.css" tofile="${doc.build.dir}/man/manpage.css"/>
    </target>
    
    <target name="javafx-man-page" depends="prepare,htmlpages.xsl,manpages.xsl">
        <manpage src="doc/man/javafx.xml" title="javafx"/>
    </target>
    
    <target name="javafxc-man-page" depends="prepare,htmlpages.xsl,manpages.xsl">
        <manpage src="doc/man/javafxc.xml" title="javafxc"/>
    </target>
    
    <target name="javafxdoc-man-page" depends="prepare,htmlpages.xsl,manpages.xsl">
        <manpage src="doc/man/javafxdoc.xml" title="javafxdoc"/>
    </target>

    <target name="-init-macrodef-manpage">
        <macrodef name="manpage">
            <attribute name="src"/>
            <attribute name="title"/>
            <sequential>
                <java classname="com.icl.saxon.StyleSheet" fork="true"
                      dir="${doc.build.dir}/man" failonerror="true">
                    <classpath refid="doc.build.class.path"/>
                    <arg line="-x org.apache.xml.resolver.tools.ResolvingXMLReader"/>
                    <arg line="-y org.apache.xml.resolver.tools.ResolvingXMLReader"/>
                    <arg line="-r org.apache.xml.resolver.tools.CatalogResolver"/>
                    <arg file="@{src}"/>
                    <arg value="${htmlpages.xsl.path}"/>
                    <arg value="use.id.as.filename=1"/>
                    <arg value="root.filename=@{title}"/>
                    <arg value="draft.mode=yes"/>
                </java>        
                <java classname="com.icl.saxon.StyleSheet" fork="true"
                      dir="${doc.build.dir}/man/man1" failonerror="true">
                    <classpath refid="doc.build.class.path"/>
                    <arg line="-x org.apache.xml.resolver.tools.ResolvingXMLReader"/>
                    <arg line="-y org.apache.xml.resolver.tools.ResolvingXMLReader"/>
                    <arg line="-r org.apache.xml.resolver.tools.CatalogResolver"/>
                    <arg file="@{src}"/>
                    <arg value="${manpages.xsl.path}"/>
                </java>         
            </sequential>
        </macrodef>
    </target>
    
    <available property="ant.jar" value="${ant.home}/lib/ant.jar" file="${ant.home}/lib/ant.jar"/>
    <pathconvert property="ant.jar">
        <mapper type="regexp" from="${path.separator}([^${path.separator}]*ant.jar)${path.separator}" to="\1"/>
        <path location="${path.separator}${java.class.path}${path.separator}"/>
    </pathconvert>

    <target name="taskdefs">
        <mkdir dir="${doc.build.dir}/ant"/>
        <javac srcdir="doc/antsrc"
               destdir="${doc.build.dir}/ant"
               classpath="${ant.home}/lib/ant.jar"/>
        <taskdef name="tangle" classname="com.sun.javafx.ant.docbook.DocBookTangleTask">
            <classpath>
                <pathelement location="${ant.jar}"/>
                <pathelement location="${doc.build.dir}/ant"/>               
            </classpath>
        </taskdef>
        <taskdef name="javafxc" classname="com.sun.tools.javafx.ant.JavaFxAntTask">
            <classpath>
                <pathelement location="${ant.jar}"/>
                <pathelement location="dist/lib/javafxc.jar"/>
            </classpath>
        </taskdef>
    </target>

    <target name="check-examples" depends="taskdefs">
        <mkdir dir="${doc.build.dir}/gensrc"/>
        <tangle srcdir="doc/langspec" destdir="${doc.build.dir}/gensrc"/>
        <mkdir dir="${doc.build.dir}/classes"/>
        <javafxc destdir="${doc.build.dir}/classes"
                 includes="**/*.fx"
                 srcdir="${doc.build.dir}/gensrc" target="1.5"
                 classpath="${doc.build.dir}/classes"
                 compilerclasspath="dist/lib/javafxc.jar"/>
    </target>
    
    <target name="copy-figures">
        <copy todir="${doc.build.dir}/html" failonerror="true">
            <fileset dir="${doc.src.dir}" includes="*.png"/>
        </copy>
    </target>

</project>
